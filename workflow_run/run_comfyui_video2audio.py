import requests
import json
import os
import time
from pathlib import Path
import shutil

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
COMFY_URL = "http://localhost:8188"
WORKFLOW_PATH = "workflows/video2video_audio.json1"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞
video_path = os.path.abspath("inputs/fluffy.mp4")
prompt = "A dreamy anime atmosphere with glowing particles"
negative_prompt = "low quality, blurry, distortion"

# –ü–∞–ø–∫–∏
OUTPUT_DIR = Path("c:/AI/ComfyUI_windows_portable/ComfyUI/output/")
RESULT_DIR = Path("c:/AI/comfyui_automatization/result/")
RESULT_DIR.mkdir(exist_ok=True)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ workflow
with open(WORKFLOW_PATH, "r", encoding="utf-8") as f:
    workflow = json.load(f)

workflow["2"]["inputs"]["video"] = video_path
workflow["3"]["inputs"]["prompt"] = prompt
workflow["3"]["inputs"]["negative_prompt"] = negative_prompt

# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ ComfyUI
response = requests.post(f"{COMFY_URL}/prompt", json={"prompt": workflow})
if response.status_code != 200:
    raise RuntimeError(f"‚ùå ComfyUI error: {response.status_code}\n{response.text}")

prompt_id = response.json()["prompt_id"]
print(f"‚úÖ Prompt ID: {prompt_id}")

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
print("‚åõ –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
while True:
    r = requests.get(f"{COMFY_URL}/history/{prompt_id}")
    if r.status_code == 200:
        data = r.json()
        if prompt_id in data and "outputs" in data[prompt_id]:
            print("üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
            break
    time.sleep(1)

# –ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö MMaudio —Ñ–∞–π–ª–æ–≤
def find_latest_mmaudio_files():
    files = list(OUTPUT_DIR.glob("MMaudio_*.mp4")) + list(OUTPUT_DIR.glob("MMaudio_*.png"))
    files.sort(key=lambda f: f.stat().st_mtime, reverse=True)
    return files[:3]  # mp4, -audio.mp4, .png

latest_files = find_latest_mmaudio_files()
if latest_files:
    for file in latest_files:
        dest = RESULT_DIR / file.name
        shutil.copy(file, dest)
        print(f"üìÅ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: {file.name} ‚Üí {dest}")
else:
    print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã MMaudio_*")

print("‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–µ ./result/")
